{"version":3,"sources":["pages/issuesEdit/issues.style.native.js","pages/issuesEdit/CardList.js","pages/issuesEdit/utils.js","pages/issuesEdit/CardDetails.js","pages/issuesEdit/issues.js","App.js","reportWebVitals.js","index.js"],"names":["styles","row1BgGrey","backgroundColor","padding","margin","minWidth","rowTitle","width","height","title","heigth","marginLeft","fontSize","textAlign","alignItems","color","subtitle","textSubtitle","paddingLeft","whiteSpace","overflow","rowError","col2","colTitle","rowValue","rowCard2","CardList","issue","order","updated","Row","style","Col","href","permalink","toString","target","rel","Button","variant","metadata","type","culprit","value","firstSeen","substr","lastSeen","userCount","count","InputDbKey","setDbKey","className","rows","onChange","el","length","InputJsonList","setNewJson","JSON","parse","InputJsonDetails","issueId","setNewDetails","disabled","saveOnDb","item","success","a","save","result","console","log","alert","message","saveIssuesList","Parse","resultIssues","forEach","Object","set","objectId","shareId","shortId","logger","level","status","statusDetails","isPublic","platform","project","name","numComments","assignedTo","isBookmarked","isSubscribed","subscriptionDetails","hasSeen","annotations","isUnhandled","stats","filename","function","display_title_with_tree_label","err","saveDetails","newIssueDetail","setResult","setNewIssueDetail","id","os","tags","user","device","CardDetails","cleanNewDetails","showCard","detailsData","setShowCard","edit","require","useState","inputDetailsDisabled","setInputDetailsDisabled","issueDetail","setIssueDetail","useEffect","auxNewDetails","aux","stringify","DetailCol","data","Container","keys","map","e","isBytes","text","Math","floor","Tag","tag","key","marginTop","marginBottom","onClick","IssuesEdit","issuesData","setIssuesData","newList","setNewList","dbKey","setDetailsData","newDetails","setCleanNewDetails","getIssuesList","issuesListData","extend","query","Query","find","results","newData","error","getDetails","issueDetailsData","initialize","serverURL","Array","isArray","latestEvent","groupID","event","contexts","cleanDetails","sort","b","Date","index","detailIssueData","newErrors","issuesOldData","newError","foundOld","findIndex","splice","push","element","attributes","projectName","newListCompare","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c3e781c.chunk.js","sourcesContent":["//https://coolors.co/e63946-f1faee-a8dadc-457b9d-1d3557\nexport const styles = {\n        \n    row1BgGrey:{\n        backgroundColor: '#F1FAEE',\n        padding: 2,\n        margin: 8,\n        minWidth: 1000,\n    },\n    rowTitle: {\n        width: '100%',\n        height: '40%',\n        backgroundColor: '#457B9D'\n    },\n    title: {\n        heigth: '40%',\n        padding: 2,\n        marginLeft: 10,\n        fontSize: 28,\n        textAlign: 'left',\n        alignItems: 'left',\n        color: '#f1faee',\n    },\n    subtitle: {\n        width: '100%',\n        height: '30%',\n        backgroundColor: '#457B9D',\n    },\n    textSubtitle: {\n        heigth: '20%',\n        paddingLeft: 20,\n        textAlign: 'left',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        color: '#f1faee'\n    },\n    rowError: {\n        heigth: '30%',\n        padding: 2,\n        margin: 0,\n        textAlign: 'left',\n        alignItems: 'center',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    col2: {\n        // width: 350,\n        // textOverflow: 'ellipsis',\n        // overflow: 'hidden',\n    },\n    colTitle: {\n        width: '100%',\n        padding: 0,\n        marginLeft: 10,\n        fontSize: 14,\n        textAlign: 'center',\n        color: '#1d3557',\n    },\n    rowValue:{\n        padding: 0,\n        margin: 0,\n        fontSize: 14,\n        textAlign: 'center',\n        color: '#1d3557',\n    },\n    rowCard2:{\n        backgroundColor: '#a8dadc',\n        padding: 2,\n        margin: 8,\n    },\n}\n\nexport default styles;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col, Row, Button } from 'react-bootstrap';\nimport styles from './issues.style.native.js';\n\nconst CardList = ({ issue, order, updated }) => {  \n  const {\n    row1BgGrey,\n    rowTitle,\n    title,\n    subtitle,\n    textSubtitle,\n    rowError,\n    col2,\n    colTitle,\n    rowValue,\n  } = styles;\n  \n  return (\n    <Row style={row1BgGrey}>\n      <Col style={{ minWidth: '10%', marginLeft: 0 }}>\n        <a href={issue.permalink.toString()} target=\"_blank\" rel=\"noreferrer noopener\">\n          <Button variant={updated}>Ver no Sentry</Button>\n        </a>\n      </Col>\n      <Col style={{ minWidth: '50%', marginLeft: 0 }}>\n        <Row style={rowTitle}>\n          <text style={title}>\n            {`${order} - ${issue.metadata?.type ? issue.metadata?.type : \"<Unknown>\"}`}\n          </text>\n        </Row>\n        <Row style={subtitle}>\n          <text style={textSubtitle}>\n            {issue.culprit}\n          </text>\n        </Row>\n        <Row style={rowError}>\n          {issue.metadata?.value}\n        </Row>\n      </Col>\n      <Col style={col2}>\n        <Row style={{ width: '100%', height: '40%' }}>\n          <text style={colTitle}>\n            <b>{`Primeira`}</b>\n          </text>\n        </Row>\n        <Row style={rowValue}>\n          {`${issue.firstSeen?.substr(0, 10)} \\n ${issue.firstSeen?.substr(11, 5)}h`}\n        </Row>\n      </Col>\n      <Col style={col2}>\n        <Row style={{ width: '100%', height: '40%' }}>\n          <text style={colTitle}>\n            <b>{`Última`}</b>\n          </text>\n        </Row>\n        <Row style={rowValue}>\n          {`${issue.lastSeen?.substr(0, 10)} \\n ${issue.lastSeen?.substr(11, 5)}h`}\n        </Row>\n      </Col>\n      <Col style={col2}>\n        <Row style={{ width: '100%', height: '40%' }}>\n          <text style={colTitle}>\n            <b>{`All Users`}</b>\n          </text>\n        </Row>\n        <Row style={rowValue}>\n          {`${issue.userCount}`}\n        </Row>\n      </Col>\n      <Col style={col2}>\n        <Row style={{ width: '100%', height: '40%' }}>\n          <text style={colTitle}>\n            <b>{`All Events`}</b>\n          </text>\n        </Row>\n        <Row style={rowValue}>\n          {`${issue.count}`}\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CardList;\n","\nexport const InputDbKey = ({ setDbKey }) => {\n  return (\n    <div className=\"form-group\">\n      <label>\n        Insira o dbKey\n      </label>\n      <textarea\n        style={{ width: '90%', textAlign: 'center', margin: 20, marginLeft: 60 }}\n        className=\"form-control\"\n        rows=\"1\"\n        onChange={el => { if (el.target.value.length === 40) { setDbKey(el.target.value) } }}\n      />\n    </div>\n  )\n};\n\n\nexport const InputJsonList = ({setNewJson}) => {\n  return (\n    <div className=\"form-group\">\n      <a href=\"https://sentry.io/api/0/projects/prit-app/prit-app-business/issues/\" target=\"_blank\" rel=\"noreferrer noopener\">\n        New Json from https://sentry.io/api/0/projects/prit-app/prit-app-business/issues/\n      </a>\n      <textarea\n        style={{ width: '90%', textAlign: 'center', margin: 20, marginLeft: 60 }}\n        className=\"form-control\"\n        rows=\"1\"\n        onChange={el => {\n          setNewJson(JSON.parse(el.target.value))\n          el.target.value = 'Ok'\n        }}\n      />\n    </div>\n  );\n};\n\n  \nexport const InputJsonDetails = ({ issueId, setNewDetails, disabled }) => {\n  return (\n    <div className=\"form-group\">\n      <a href={`https://sentry.io/api/0/issues/${issueId}/hashes/`} target=\"_blank\" rel=\"noreferrer noopener\">\n        {`New Details from https://sentry.io/api/0/issues/${issueId}/hashes/`}\n      </a>\n      <textarea\n        style={{ width: '90%', textAlign: 'center', margin: 20, marginLeft: 60 }}\n        className=\"form-control\"\n        disabled={disabled}\n        rows=\"1\"\n        onChange={el => {\n          setNewDetails(JSON.parse(el.target.value))\n          el.target.value = 'Ok'\n        }}\n      />\n    </div>\n  )\n};\n\nconst saveOnDb = async (item, success) => {\n  try {\n    let result = await item.save();\n    console.log('New object created with objectId: ' + result);\n    success++;\n  } catch (error) {\n    alert('Failed to create new object, with error code: ' + error.message);\n  };\n};\n\nexport const saveIssuesList = async (Parse, resultIssues) => {\n  let success = 0;\n  try {\n    resultIssues.forEach((el) => {\n      if (el.updated) {\n        const issue = new Parse.Object(\"issuesList\");\n        issue.set(\"id\", el.objectId || null);\n        issue.set(\"issueId\", el.issueId);\n        issue.set(\"shareId\", el.shareId)\n        issue.set(\"shortId\", el.shortId)\n        issue.set(\"title\", el.title)\n        issue.set(\"culprit\", el.culprit)\n        issue.set(\"permalink\", el.permalink)\n        issue.set(\"logger\", el.logger)\n        issue.set(\"level\", el.level)\n        issue.set(\"status\", el.status)\n        issue.set(\"statusDetails\", el.statusDetails)\n        issue.set(\"isPublic\", el.isPublic)\n        issue.set(\"platform\", el.platform)\n        issue.set(\"projectName\", el.project?.name || '')\n        issue.set(\"type\", el.type)\n        issue.set(\"numComments\", el.numComments)\n        issue.set(\"assignedTo\", el.assignedTo)\n        issue.set(\"isBookmarked\", el.isBookmarked)\n        issue.set(\"isSubscribed\", el.isSubscribed)\n        issue.set(\"subscriptionDetails\", el.subscriptionDetails)\n        issue.set(\"hasSeen\", el.hasSeen)\n        issue.set(\"annotations\", el.annotations)\n        issue.set(\"isUnhandled\", el.isUnhandled)\n        issue.set(\"count\", el.count)\n        issue.set(\"userCount\", el.userCount)\n        issue.set(\"firstSeen\", el.firstSeen)\n        issue.set(\"lastSeen\", el.lastSeen)\n        issue.set(\"stats\", el.stats)\n        issue.set(\"metadata\", {\n          \"value\": el.metadata.value,\n          \"type\": el.metadata.type,\n          \"filename\": el.metadata.filename,\n          \"function\": el.metadata.function,\n          \"display_title_with_tree_label\": el.metadata.display_title_with_tree_label,\n        })\n        saveOnDb(issue, success);\n      }\n    });\n  } catch (err) {\n    console.log('erro', err)\n  }\n  alert(`${success} issues atualizados com sucesso!`)\n};\n\nexport const newListCompare = (issuesData, resultIssues, newList) => {\n  const newErrors = newList;\n  const issuesOldData = JSON.parse(JSON.stringify(issuesData));\n\n  newErrors.forEach((newError, index) => {\n    const foundOld = issuesOldData.findIndex(el => el.issueId === newError.id);\n    console.log(`${index} - issue Id: ${newError.id} / duplicado: ${foundOld !== -1} new: ${newError.lastSeen} old: ${foundOld !== -1 ? issuesOldData[foundOld].lastSeen : ''}`)\n    if (foundOld !== -1 && newError.lastSeen === issuesOldData[foundOld].lastSeen) {\n      issuesOldData[foundOld].updated = false;\n      issuesOldData.splice(foundOld, 1);\n      console.log('updated false')\n    } else {\n      console.log('updated true - novo')\n      newError.updated = true;\n      if (foundOld !== -1) {\n        console.log('updated true  - atualizado')\n        newError.objectId = issuesOldData[foundOld].objectId;\n        issuesOldData.splice(foundOld, 1);\n      }\n      issuesOldData.push(newError);\n    }\n  });\n\n  issuesOldData.forEach((element) => {\n    const el = element.attributes ? element.attributes : element;\n    resultIssues.push({\n      objectId: element.objectId || '',\n      issueId: el.issueId || el.id,\n      title: el.title,\n      culprit: el.culprit,\n      permalink: el.permalink,\n      level: el.level,\n      platform: el.platform,\n      projectName: el.project?.name || '',\n      type: el.type,\n      metadata: {\n        value: el.metadata.value,\n        type: el.metadata.type,\n        filename: el.metadata.filename,\n        function: el.metadata.function,\n        display_title_with_tree_label: el.metadata.display_title_with_tree_label,\n      },\n      hasSeen: el.hasSeen,\n      isUnhandled: el.isUnhandled,\n      count: el.count,\n      userCount: el.userCount,\n      firstSeen: el.firstSeen,\n      lastSeen: el.lastSeen,\n      updated: el.updated,\n    })\n  });\n};\n\nexport const cleanDetails = (e, setCleanNewDetails) => {\n    if (!e.length) { return null }\n    const event = e[0].latestEvent;\n    const result = {\n      id: event.groupID,\n      device: event.contexts.device,\n      os: event.contexts.os,\n      tags: event.tags,\n      user: event.user,\n    }\n    setCleanNewDetails(result);\n};\n\n\nexport const saveDetails = async (\n  Parse,\n  newIssueDetail,\n  lastSeen,\n  setResult,\n  setNewIssueDetail,\n) => {\n  const saveOnDb = async (item) => {\n    try {\n      let result = await item.save();\n      console.log('New object created with objectId: ', result);\n      setNewIssueDetail(null);\n        \n    } catch (error) {\n      alert('Failed to create new object, with error code: ' + error.message);\n      console.log('erro ao salvar: ', error);\n    };\n  };\n\n  try {\n    const result = new Parse.Object(\"issuesDetails\");\n    result.set(\"id\", newIssueDetail.objectId || null);\n    result.set(\"issueId\", newIssueDetail.id);\n    result.set(\"os\", newIssueDetail.os);\n    result.set(\"tags\", newIssueDetail.tags);\n    result.set(\"user\", newIssueDetail.user);\n    result.set(\"device\", newIssueDetail.device);\n    result.set(\"lastSeen\", lastSeen);\n\n    saveOnDb(result);\n    setResult(result);\n  } catch (err) {\n    console.log('erro', err)\n  }\n};","import React, {useEffect, useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Col, Row, Container } from 'react-bootstrap';\nimport styles from './issues.style.native.js';\nimport { InputJsonDetails, saveDetails } from './utils.js';\n\nconst CardDetails = (\n  { issueId,\n    cleanNewDetails,\n    showCard,\n    setNewDetails,\n    detailsData,\n    setShowCard,\n    lastSeen,\n    edit,\n  }) => {\n  \n  const {\n    colTitle,\n    rowValue,\n    rowCard2,\n  } = styles;\n  var Parse = require('parse/node');\n\n  const [inputDetailsDisabled, setInputDetailsDisabled] = useState(false);\n  const [newIssueDetail, setNewIssueDetail] = useState(null);\n  const [result, setResult] = useState(null);\n  const [issueDetail, setIssueDetail] = useState(detailsData);\n\n  useEffect(()=>{\n    setIssueDetail(detailsData)\n  }, [detailsData]);\n  \n  useEffect(() => {\n    if (cleanNewDetails.id === issueId) {\n      const auxNewDetails = cleanNewDetails;\n      if (issueDetail) {\n        auxNewDetails.objectId = issueDetail.objectId;\n      }\n      setNewIssueDetail(auxNewDetails);\n    }\n  }, [cleanNewDetails]);\n  \n  useEffect(() => {\n    if (newIssueDetail) {\n      saveDetails(Parse, newIssueDetail, lastSeen, setResult, setNewIssueDetail)\n      setInputDetailsDisabled(true);\n    };\n  }, [newIssueDetail]);\n  \n  useEffect(() => {\n    if (result) {\n      const aux = JSON.parse(JSON.stringify(result));\n      setIssueDetail({\n        device: aux.device,\n        issueId: aux.issueId,\n        os: aux.os,\n        tags: aux.tags,\n        user: aux.user,\n      })\n    }\n  }, [result]);\n\n  const DetailCol = ({ data, title }) => {\n    return (\n      <Container>\n        <Row>\n          <text style={colTitle}>\n            <b>{title}</b>\n          </text>\n        </Row>\n        {data && Object.keys(data).map((e) => {\n          const isBytes = (\n            e === 'memory_size'\n            || e === 'free_memory'\n            || e === 'storage_size'\n            || e === 'free_storage'\n          );\n          const text = data[e]=== null ? 'null' : isBytes? Math.floor(data[e]/1000000) + ' Mb' : data[e].toString();\n          return (\n            <Row>\n              <Col style={rowValue}>\n                <text style={colTitle}>\n                  <b>{e}</b>\n                </text>\n              </Col>\n              <Col style={rowValue}>\n                <text style={colTitle}>\n                  {text}\n                </text>\n              </Col>\n            </Row>\n          )\n        })}\n      </Container>\n    )\n  }\n\n  const Tag = ({ tags }) => {\n    return (\n      <Container>\n        <Row>\n          <text style={colTitle}>\n            <b>TAGS DATA</b>\n          </text>\n        </Row>\n        {tags.map((tag) => {\n          return (\n            <Row>\n              <Col>\n                <text style={colTitle}>\n                  <b>{tag.key}</b>\n                </text>\n              </Col>\n              <Col style={rowValue}>\n                <text style={colTitle}>\n                  {tag.value}\n                </text>\n              </Col>\n            </Row>\n          )\n        })}\n      </Container>\n    )\n  };\n\n  return (\n    <Container>\n      {(showCard !== issueId) && <Button style={{ width: '100%', marginTop: 20, marginBottom: 8 }} variant=\"primary\" onClick={() => setShowCard(issueId)}>MoreInfo</Button>}\n      {(showCard === issueId) &&\n        <Col style={{ width: '90%' }}>\n        {issueDetail &&\n          <Container>\n            <Row style={{ minWidth: '60%' }}>\n              <Col style={{ width: '50%' }}>\n                <Row style={rowCard2}>\n                  <DetailCol data={issueDetail.os} title={'OS INFORMATION'} />\n                </Row>\n              </Col>\n              <Col style={{ width: '50%' }}>\n                <Row style={rowCard2}>\n                  <DetailCol data={issueDetail.user} title={'USER INFORMATION'} />\n                </Row>\n              </Col>\n            </Row>\n            <Row style={{ minWidth: '60%' }}>\n              <Col style={{ width: '50%' }}>\n                <Row style={rowCard2}>\n                  <Tag tags={issueDetail.tags} />\n                </Row>\n              </Col>\n              <Col style={{ width: '50%' }}>\n                <Row style={rowCard2}>\n                  <DetailCol data={issueDetail.device} title={'DEVICE INFORMATION'} />\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        }\n        {!issueDetail &&\n          <Row>\n            <text>Nenhum dado para exibir</text>\n          </Row>\n        }\n        {edit && <InputJsonDetails issueId={issueId} setNewDetails={setNewDetails} disabled={inputDetailsDisabled} />}\n        </Col>\n      }\n    </Container>\n  );\n};\n\nexport default CardDetails;\n","import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Col, Row, Container } from 'react-bootstrap';\nimport styles from './issues.style.native.js';\nimport CardList from './CardList.js';\nimport CardDetails from './CardDetails.js';\nimport { InputDbKey, InputJsonList, saveIssuesList, newListCompare, cleanDetails } from './utils.js';\n\nconst IssuesEdit = ({edit = false}) => {\n  const [issuesData, setIssuesData] = useState([]);\n  const [newList, setNewList] = useState([]);\n  const [resultIssues, setResultIssues] = useState([]);\n  const [dbKey, setDbKey] = useState(null);\n  const [detailsData, setDetailsData] = useState([]);\n  const [newDetails, setNewDetails] = useState([]);\n  const [cleanNewDetails, setCleanNewDetails] = useState([]);\n  const [showCard, setShowCard] = useState(false);\n  \n  const lastUpdated = '01/01 - 00:00h';\n  \n  const {\n    row1BgGrey,\n  } = styles;\n  \n  var Parse = require('parse/node');\n  const getIssuesList = async () => {\n    const issuesListData = Parse.Object.extend('issuesList');\n    const query = new Parse.Query(issuesListData);\n    // You can also query by using a parameter of an object\n    // query.equalTo('issue_id', '1668114260');\n    try {\n      const results = await query.find();\n      const newData = JSON.parse(JSON.stringify(results));\n      setIssuesData(newData);\n    } catch (error) {\n      console.error('Error while fetching issuesList', error);\n    };\n  };\n\n  const getDetails = async () => {\n    const issueDetailsData = Parse.Object.extend('issuesDetails');\n    const query = new Parse.Query(issueDetailsData);\n\n    // You can also query by using a parameter of an object\n    // query.equalTo('issueId', issueId.toString());\n    try {\n      const results = await query.find();\n      const newData = JSON.parse(JSON.stringify(results));\n      setDetailsData(newData);\n    } catch (error) {\n      console.error('Error while fetching issuesList', error);\n    };\n  };\n  \n  useEffect(() => {\n    if (dbKey) {\n      Parse.initialize(\"AOIkbVtbBP9IfqV80DyYBCNul4DYR03MNcikFamg\", dbKey); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY\n      Parse.serverURL = 'https://parseapi.back4app.com/'\n      getIssuesList();\n      getDetails();\n    }\n  }, [dbKey]);\n\n  useEffect(() => {\n    const isValid = (newList.length === 0\n      || (Array.isArray(newList)\n        && newList.length > 0\n        && newList[0].id)\n    );\n    if (!isValid) { setNewList([]) };\n  }, [newList]);\n  \n  useEffect(() => {\n    const isValid = (newDetails.length === 0\n      || (Array.isArray(newDetails)\n        && newDetails.length > 0\n        && newDetails[0].latestEvent\n        && newDetails[0].latestEvent.groupID === showCard)\n    );\n\n    if (!isValid) {\n      setNewDetails([])\n      alert('Dados inválidos!')\n    } else {\n      cleanDetails(newDetails, setCleanNewDetails);\n      //salvar db\n    }\n  }, [newDetails])\n  \n  return (\n    <div style={{ width: '100%', textAlign: 'center', padding: 20 }}>\n      <h1>Issues from Sentry</h1>\n      {!dbKey &&\n        <InputDbKey setDbKey={setDbKey} />\n      }\n      {dbKey &&\n        <>\n          <h4>Updated at {lastUpdated}</h4>\n          <Container>\n          {issuesData.sort((a, b) => new Date(b.lastSeen) - new Date(a.lastSeen)).map((issue, index) => {\n            const detailIssueData = detailsData.find(e => e.issueId === issue.issueId);\n            const updated = detailIssueData ? (issue.lastSeen === detailIssueData.lastSeen)?\"success\": \"danger\" : \"danger\" ;\n              return (\n                <Row style={row1BgGrey}>\n                  <Col style={{ minWidth: '60%' }}>\n                    <CardList\n                      issue={issue}\n                      order={index + 1}\n                      updated={updated}\n                    />\n                  </Col>\n                  <CardDetails\n                    detailsData={detailIssueData}\n                    showCard={showCard}\n                    setShowCard={setShowCard}\n                    issueId={issue.issueId}\n                    cleanNewDetails={cleanNewDetails}\n                    setNewDetails={setNewDetails}\n                    resultIssues={resultIssues}\n                    lastSeen={issue.lastSeen}\n                    edit={edit}\n                  />\n                </Row>\n              )\n            })}\n        </Container>\n        {edit &&\n          <>\n            <InputJsonList setNewJson={setNewList} />\n            <Button variant=\"primary\" onClick={() => newListCompare(issuesData, resultIssues, newList)} >Comparar</Button>\n            <Button variant=\"primary\" onClick={() => saveIssuesList(Parse, resultIssues)} >Save Issues List</Button>\n          </>\n        }\n        </>\n      }\n    </div>\n  )\n};\n\nexport default IssuesEdit;\n","import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport IssuesEdit from './pages/issuesEdit/issues';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<IssuesEdit />} />\n          <Route path=\"/issues\" element={<IssuesEdit />} />\n          <Route path=\"/prit-sentry\" element={<IssuesEdit />} />\n          <Route path=\"/prit-sentry-list\" element={<IssuesEdit />} />\n          <Route path=\"/prit-sentry-edit\" element={<IssuesEdit edit={ true }/>} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}